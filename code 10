/*
Exercise 10
Create a method called catchPokemon and add it to the game object. You should not need to edit the original game object directly. This method should:
  - Accept an object as a parameter called pokemonObj
  - Add the pokemonObj to the game.party array.
  - not return anything

After writing this method, call it and pass in a Pokemon object of your choice from the pokemon data to catch it.

Solve Exercise 10 here:
*/

// Existing game object
const game = {
  party: [],
  gyms: [
    { location: "Pewter City", completed: false, difficulty: 1 },
    { location: "Cerulean City", completed: false, difficulty: 2 },
    { location: "Vermilion City", completed: false, difficulty: 3 },
    { location: "Celadon City", completed: false, difficulty: 4 },
    { location: "Fuchsia City", completed: false, difficulty: 5 },
    { location: "Saffron City", completed: false, difficulty: 6 },
    { location: "Cinnabar Island", completed: false, difficulty: 7 },
    { location: "Viridian City", completed: false, difficulty: 8 },
  ],
  items: [
    { name: "potion", quantity: 4 },
    { name: "pokeball", quantity: 8 },
    { name: "rare candy", quantity: 99 },
  ],
  
  // Method to catch a Pokémon
  catchPokemon: function(pokemonObj) {
    this.party.push(pokemonObj);  // Add the pokemonObj to the party array
  }
};

// Example Pokémon object
const pokemon = { name: "Bulbasaur", type: "grass", starter: true };

// Calling the catchPokemon method to catch Bulbasaur
game.catchPokemon(pokemon);

// Log the party array to check if the Pokémon was added
console.log(game.party);
