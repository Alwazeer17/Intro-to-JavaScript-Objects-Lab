/*
Exercise 21
Dynamically construct an object with the existing `pokemon` data sorted by the different pokemon types. The object will have this structure:

{
  grass: [
    { number: 1, name: 'Bulbasaur', type: 'grass', hp: 45, starter: true },
    { number: 2, name: 'Ivysaur', type: 'grass', hp: 60, starter: false },
    { number: 3, name: 'Venusaur', type: 'grass', hp: 80, starter: false },
    * more grass type Pokemon objects...
  ],
  fire: [
    { number: 4, name: 'Charmander', type: 'fire', hp: 39, starter: true },
    * more fire type Pokemon objects...
  ],
  water: [
    * water type Pokemon objects...
  ],
  * etc... until there is an array for every Pokemon type!
}

Log the object when it's constructed.

Solve Exercise 21 here:
*/


const pokemonData = [
  { number: 1, name: 'Bulbasaur', type: 'grass', hp: 45, starter: true },
  { number: 2, name: 'Ivysaur', type: 'grass', hp: 60, starter: false },
  { number: 3, name: 'Venusaur', type: 'grass', hp: 80, starter: false },
  { number: 4, name: 'Charmander', type: 'fire', hp: 39, starter: true },
  { number: 5, name: 'Charmeleon', type: 'fire', hp: 58, starter: false },
  { number: 6, name: 'Charizard', type: 'fire', hp: 78, starter: false },
  { number: 7, name: 'Squirtle', type: 'water', hp: 44, starter: true },
  { number: 8, name: 'Wartortle', type: 'water', hp: 59, starter: false },
  { number: 9, name: 'Blastoise', type: 'water', hp: 79, starter: false }
];

const sortedPokemon = {};

pokemonData.forEach(pokemon => {
  if (!sortedPokemon[pokemon.type]) {
    sortedPokemon[pokemon.type] = [];
  }
  sortedPokemon[pokemon.type].push(pokemon);
});

console.log(sortedPokemon);
